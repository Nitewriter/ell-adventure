[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ell-adventure"
version = "0.1.0"
description = ""
authors = ["Joel Garrett <lythium.ion@gmail.com>"]
readme = "README.md"
packages = [{include = "adventure", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
ell-ai = {extras = ["all"], version = "^0.0.13"}
openai = "^1.51.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pyright = "^1.1.383"
toml-sort = "^0.23.1"
ruff = "^0.6.8"
ipykernel = "^6.29.5"

[tool.poetry.scripts]
adventure = "adventure.__main__:main"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
venv = ".venv"
venvPath = "."
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingTypeStubs = false
executionEnvironments = [
  {root = "src"}
]

[tool.ruff]
extend-include = ["*.ipynb"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
# Same as Black.
line-length = 120
# Assume Python 3.12.
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes ('F') and a subset of the pycodestyle ('E') codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["E501"] # Ignore line length violations
# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []
# Move the following settings to the lint section
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.toml-sort]
all = true
inline_tables = false
trailing_comma_inline_array = true
sort_table_keys = true
spaces_indent_inline_array = 4
sort_first = [
  "tool.poetry",
  "tool.poetry.dependencies",
  "tool.poetry.group.dev.dependencies",
  "build-system"
]
